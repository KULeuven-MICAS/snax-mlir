[project]
name = "snax-mlir"
description = "Driving SNAX with MLIR"
version = "0.2.2"
requires-python = "== 3.12.*"

dependencies = [
    "xdsl @ git+https://github.com/xdslproject/xdsl.git@60e3b7970a3eb7fc16ab7e57c2928357bc5d0180",
    "numpy",
]

[project.optional-dependencies]

# All optional dependencies for plotting and parsing
dev = [
    "pre-commit",
    "filecheck==1.0.0",
    "lit",
    "pytest",
]

# All optional dependencies for graphical plotting
viz = [
    "pandas",
    "matplotlib",
]

# Dependencies for neural network compilation
nn = [
    "tensorflow-cpu==2.19.0",
]

[project.scripts]
snax-opt = "snaxc.tools.snax_opt_main:main"

[tool.ruff]
target-version = "py310"
extend-include = ["*.pyi"]

[tool.ruff.lint]
select = ["E", "F", "W", "I", "UP", "PT", "TID251"]
ignore = [
    "E741",  # https://beta.ruff.rs/docs/rules/ambiguous-variable-name/
    "PT006", # https://beta.ruff.rs/docs/rules/pytest-parametrize-names-wrong-type/
    "PT011", # https://beta.ruff.rs/docs/rules/pytest-raises-too-broad/
    "PT012", # https://beta.ruff.rs/docs/rules/pytest-raises-with-multiple-statements/
]

[tool.ruff.lint.pycodestyle]
max-line-length = 120

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"xdsl.dialects.utils.fast_math".msg = "Use xdsl.dialects.utils instead"
"xdsl.dialects.utils.format".msg = "Use xdsl.dialects.utils instead"
"xdsl.ir.affine.affine_expr".msg = "Use xdsl.ir.affine instead"
"xdsl.ir.affine.affine_map".msg = "Use xdsl.ir.affine instead"
"xdsl.ir.affine.affine_set".msg = "Use xdsl.ir.affine instead"
"xdsl.ir.core".msg = "Use xdsl.ir instead."
"xdsl.irdl.attributes".msg = "Use xdsl.irdl instead"
"xdsl.irdl.common".msg = "Use xdsl.irdl instead"
"xdsl.irdl.constraints".msg = "Use xdsl.irdl instead"
"xdsl.irdl.operations".msg = "Use xdsl.irdl instead"
"xdsl.parser.affine_parser".msg = "Use xdsl.parser instead."
"xdsl.parser.attribute_parser".msg = "Use xdsl.parser instead."
"xdsl.parser.base_parser".msg = "Use xdsl.parser instead."
"xdsl.parser.core".msg = "Use xdsl.parser instead."
"xdsl.parser.generic_parser".msg = "Use xdsl.parser instead."


[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F403"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.pyright]
reportImportCycles = false
reportMissingModuleSource = false
enableTypeIgnoreComments = false
enableExperimentalFeatures = true
typeCheckingMode = "strict"
"include" = [
    "snaxc",
    "tests",
]
"exclude" = [
    "snaxc/dialects/accfg.py",
    "snaxc/inference/dataflow.py",
    "snaxc/inference/helpers.py",
    "snaxc/inference/scoped_setups.py",
]


[tool.pixi.project]
channels = ["conda-forge", "bioconda", "kuleuven-micas"]
platforms = ["linux-64"]

[tool.pixi.pypi-dependencies]
snax-mlir = { path = ".", editable = true }

[tool.pixi.environments]
default = { features = ["dev", "nn", "viz"] }

[tool.pixi.tasks]

[tool.pixi.dependencies]
mlir = { version = "==20.1.1", channel = "kuleuven-micas" }
clang = "==20.1.1"
lld = "==20.1.1"
snax-cluster-prebuilt = "==0.2.12"
snakemake-minimal="*"
pyright = ">=1.1.390,<2"
vcd-to-csv = { version = ">=0.1.0,<0.2", channel = "kuleuven-micas" }
