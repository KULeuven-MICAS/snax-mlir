from util.get_model import get_model
from util.snake.configs import get_mlperf_tiny_config

config = get_mlperf_tiny_config()


module default_rules:
    snakefile:
        "../../util/snake/default_rules.smk"
    config:
        config


module tf_rules:
    snakefile:
        "../../util/snake/tensorflow.smk"
    config:
        config


use rule * from default_rules exclude compile_llvm_module, snax_opt_mlir as default_*


use rule * from tf_rules as tf_*


nets = ["resnet18_int8", "kws_int8", "mobilenet_int8", "anomaly_int8"]
extensions = [".o"]


rule all:
    input:
        expand("{network}{extension}", network=nets, extension=extensions),


rule get_mlperf_tiny_model:
    output:
        "{network}.mlir",
    wildcard_constraints:
        network="|".join(nets),
    shell:
        "wget -O {output[0]} https://github.com/kuleuven-micas/mlir-networks/releases/latest/download/mlperf_tiny_{output[0]}"


rule snax_opt_mlir:
    """
    Similar to snax_opt_mlir, but with print-op-generic
    """
    input:
        "{file}.mlir",
    output:
        temp("{file}.ll.mlir"),
    shell:
        "{config[snax-opt]} -p {config[snaxoptflags]} --allow-unregistered-dialect --print-op-generic -o {output} {input}"


# Override default rule, for output not to be temporary
rule compile_llvm_module:
    input:
        "{file}.ll",
    output:
        "{file}.o",
    shell:
        "{config[cc]} {config[clangflags]} -x ir -c {input} -o {output}"
