builtin.module {
  func.func @snax_main() -> (tensor<64xi8>, tensor<64xi8>) {
    %0 = arith.constant dense<[6094478, 3315092, -7765511, 4586186, -371481, 526850, -2595148, -5018495, 3953367, 8544107, -5478627, -3980123, -6655231, -819649, -9896645, 5964436, -8737248, -215367, -4335211, -304021, -694352, -4256934, 642490, -3886210, 3237723, 2648637, 6861870, -4852419, 8731570, -7571612, -7336954, 959014, 5346051, -6614643, 5933681, 1184121, -8534311, 6845364, 8602881, 9522899, 1392366, 5358907, -7330005, 2839420, 3479854, -3602014, 3187277, -8129072, -5844701, 946097, 4091261, 9082629, -9728164, -6415298, -2718631, 9076651, -1414623, 9435721, 8048957, 7824013, -6952738, 973639, -9435315, -7120810]> : tensor<64xi32>
    %1 = arith.constant dense<[50, 27, -62, 38, -3, 5, -21, -40, 33, 70, -44, -32, -53, -6, -80, 49, -70, -1, -35, -2, -5, -34, 6, -31, 27, 22, 56, -39, 71, -61, -59, 8, 44, -53, 49, 10, -69, 56, 70, 78, 12, 44, -59, 24, 29, -29, 26, -65, -47, 8, 34, 74, -78, -51, -22, 74, -11, 77, 66, 64, -56, 8, -76, -57]> : tensor<64xi8>
    %2 = tensor.empty() : tensor<64xi8>
    %3 = linalg.generic {indexing_maps = [affine_map<(d0) -> (d0)>, affine_map<(d0) -> (d0)>], iterator_types = ["parallel"]} ins(%0 : tensor<64xi32>) outs(%2 : tensor<64xi8>) {
    ^0(%4 : i32, %5 : i8):
      %6 = kernel.rescale %4 {input_zp = 0 : i8, output_zp = 0 : i8, multiplier = array<i32: 1140768826>, shift = array<i32: 47>, max_int = 127 : i8, min_int = -128 : i8, double_round = true} : (i32) -> i8
      linalg.yield %6 : i8
    } -> tensor<64xi8>
    func.return %3, %1 : tensor<64xi8>, tensor<64xi8>
  }
}

