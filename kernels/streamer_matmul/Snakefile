from util.snake.configs import get_snax_gemmx_config

config = get_snax_gemmx_config()


module snax_rules:
    snakefile:
        "../../util/snake/snax.smk"
    config:
        config


use rule * from snax_rules exclude snax_opt_mlir as snax_*


rule compile_snax:
    """
    Apply various transformations snax-opt on mlir files.
    Options controlled with `snaxoptflags` defined in config.
    """
    input:
        "{file}.mlir",
    output:
        temp("{file}.ll.mlir"),
    shell:
        "{config[snaxc]} -c {config[snaxc-config]} -o {output} {input}"


files = ["quantized_matmul", "tiled_quantized_matmul", "matmul_i8_out"]


# Rules
rule all:
    input:
        expand("{file}_traces.json", file=files),


rule generate_quantized_matmul:
    output:
        "quantized_matmul.mlir",
    script:
        "quantized_matmul.py"


rule generate_matmul_i8_out:
    output:
        "matmul_i8_out.mlir",
    script:
        "matmul_i8_out.py"


rule generate_tiled_quantized_matmul:
    output:
        "tiled_quantized_matmul.mlir",
    script:
        "tiled_quantized_matmul.py"


def get_main_obj(wildcards):
    if "i8" in wildcards.file:
        return "main_i8.o"
    else:
        return "main.o"


rule link_snax_binary:
    input:
        "{file}.o",
        main=lambda wildcards: get_main_obj(wildcards),
    output:
        "{file}.x",
    shell:
        "{config[ld]} {config[ldflags]} {input[0]} {input.main} -o {output}"
